{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Microsoft Outlook Event API Slack Bot","text":"<p>The repository includes a Python-based Slack Bot for MS Outlook events.</p>"},{"location":"#functionality","title":"Functionality","text":"<p>The application allows accessing shared calendars of a user and reading the corresponding weekly events via Microsoft API calls. In the next step, it is possible to send this event in the form of a Slack message to a connected Slack channel.</p>"},{"location":"#installation","title":"Installation","text":"<p><code>pip install outlook-event-slack-bot</code></p>"},{"location":"#example-of-use","title":"Example of use","text":"<pre><code>import argparse\n\nfrom outlook_event_slack_notification_bot.model import SlackAPI, OutlookCalendarApi\nfrom outlook_event_slack_notification_bot.slack import Slack\nfrom outlook_event_slack_notification_bot.outlook_calendar import OutlookCalendar\n\n\nif __name__ == \"__main__\":\n    parser = argparse.ArgumentParser(description=\"Script to extract a user's Outlook calendar events and \"\n                                                 \"forward them to a Slack channel.\")\n    parser.add_argument(\"-wh\", \"--webhook\", type=str, required=True, help=\"Get the Slack webhook\")\n    parser.add_argument(\"-t\", \"--tenant\", type=str, required=True, help=\"Get the Microsoft tenant\")\n    parser.add_argument(\"-ci\", \"--client-id\", type=str, required=True, help=\"Get the Microsoft OAuth Client ID\")\n    parser.add_argument(\"-cs\", \"--client-secret\", type=str, required=True, help=\"Get the Microsoft OAuth Client secret\")\n    parser.add_argument(\"-scu\", \"--shared_calendar_user\", type=str, required=True,\n                        help=\"Get the Outlook shared calendar user\")\n    parser.add_argument(\"-scn\", \"--shared_calendar_name\", type=str, required=True,\n                        help=\"Get the Outlook shared calendar name\")\n    parser.add_argument(\"-cn\", \"--custom_notification\", type=str, required=True,\n                        help=\"Should be custom notifications send to the corresponding users, \"\n                             \"defined Outlook calendar event body?\")\n    args = parser.parse_args()\n\n    outlook_calendar_api: OutlookCalendarApi = OutlookCalendarApi(\n        tenant=args.tenant, client_id=args.client_id, client_secret=args.client_secret\n    )\n    outlook_calendar: OutlookCalendar = OutlookCalendar(outlook_calendar_api)\n    events: list = outlook_calendar.get_events(\n        args.shared_calendar_name, args.shared_calendar_user\n    )\n    events_cw: list = outlook_calendar.get_weekly_events(events)\n    Slack(SlackAPI(args.webhook), args.custom_notification).send_slack_message(events_cw)\n</code></pre>"},{"location":"#optimization-potential","title":"Optimization potential:","text":"<ul> <li> Add Integration tests</li> </ul>"},{"location":"#contribution","title":"Contribution","text":"<p>If you would like to contribute something, have an improvement request, or want to make a change inside the code, please open a pull request.</p>"},{"location":"#support","title":"Support","text":"<p>If you need support, or you encounter a bug, please don't hesitate to open an issue.</p>"},{"location":"#donations","title":"Donations","text":"<p>If you want to support my work, I ask you to take an unusual action inside the open source community. Donate the money to a non-profit organization like Doctors Without Borders or the Children's Cancer Aid. I will continue to build tools because I like them, and I am passionate about developing and sharing applications.</p>"},{"location":"#license","title":"License","text":"<p>This product is available under the Apache 2.0 license.</p>"},{"location":"outlook_calendar_slack_notification_bot/model/","title":"Table of Contents","text":"<ul> <li>model</li> <li>SlackAPI</li> <li>MicrosoftApi</li> <li>OutlookCalendarApi</li> </ul>"},{"location":"outlook_calendar_slack_notification_bot/model/#model","title":"model","text":""},{"location":"outlook_calendar_slack_notification_bot/model/#slackapi-objects","title":"SlackAPI Objects","text":"<pre><code>@dataclass\nclass SlackAPI()\n</code></pre> <p>The class includes all necessary variables to establish a connection to the Slack channel</p> <p>Arguments:</p> <ul> <li><code>webhook</code> str - Specify the webhook url of the Slack channel</li> <li><code>retries</code> int - Specify the retries of the forwarding process (default 5)</li> </ul> <p></p>"},{"location":"outlook_calendar_slack_notification_bot/model/#microsoftapi-objects","title":"MicrosoftApi Objects","text":"<pre><code>@dataclass\nclass MicrosoftApi()\n</code></pre> <p>The class includes all necessary variables to establish connections to the Microsoft endpoints</p> <p>Arguments:</p> <ul> <li><code>graph_api_url</code> str - Specify the Microsoft Graph API url (default https://graph.microsoft.com)</li> <li><code>microsoft_login_api</code> str - Specify the Microsoft login url (default https://login.microsoftonline.com)</li> </ul> <p></p>"},{"location":"outlook_calendar_slack_notification_bot/model/#outlookcalendarapi-objects","title":"OutlookCalendarApi Objects","text":"<pre><code>@dataclass\nclass OutlookCalendarApi()\n</code></pre> <p>The class includes all necessary variables to establish connections the Outlook API endpoints</p> <p>Arguments:</p> <ul> <li><code>tenant</code> str - Specify the Microsoft Tenant</li> <li><code>client_id</code> str - Specify the Microsoft OAUTH client ID</li> <li><code>client_secret</code> str - Specify the Microsoft OAUTH client secret</li> <li><code>retries</code> int - Specify the retries of the process to establish a connection the Outlook API (default 5)</li> <li><code>microsoft_api</code> MicrosoftApi - Specify the Microsoft APi endpoint urls (default MicrosoftApi())</li> </ul>"},{"location":"outlook_calendar_slack_notification_bot/outlook-calendar/","title":"Table of Contents","text":"<ul> <li>outlook_calendar</li> <li>OutlookCalendar<ul> <li>get_events</li> <li>get_events_by_days</li> <li>get_weekly_events</li> </ul> </li> </ul>"},{"location":"outlook_calendar_slack_notification_bot/outlook-calendar/#outlook_calendar","title":"outlook_calendar","text":""},{"location":"outlook_calendar_slack_notification_bot/outlook-calendar/#outlookcalendar-objects","title":"OutlookCalendar Objects","text":"<pre><code>class OutlookCalendar()\n</code></pre> <p>The class includes all necessary methods to access the Outlook calendar API endpoints</p> <p>Arguments:</p> <ul> <li><code>outlook_calendar_api</code> OutlookCalendarApi - Inject an Outlook calendar API model object that includes all necessary values and information</li> </ul> <p>Attributes:</p> <ul> <li><code>outlook_calendar_api</code> OutlookCalendarApi - This is where we store the outlook_calendar_api</li> <li><code>outlook_graph_api_client</code> httpx.Client - This is where we store the outlook_graph_api_client</li> <li><code>outlook_graph_api_access_token</code> str - This is where we store the outlook_graph_api_access_token</li> </ul> <p></p>"},{"location":"outlook_calendar_slack_notification_bot/outlook-calendar/#get_events","title":"get_events","text":"<pre><code>def get_events(calendar_name: str, user_id: str) -&gt; list\n</code></pre> <p>The method includes a functionality to get the events</p> <p>Arguments:</p> <ul> <li><code>calendar_name</code> str - Specify the calendar name</li> <li><code>user_id</code> str - Specify the user id</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>ConnectionError</code> - It is not possible to establish a connection to the endpoint</li> </ul> <p>Returns:</p> <ul> <li><code>events</code> list - Returns the corresponding calendar events</li> </ul> <p></p>"},{"location":"outlook_calendar_slack_notification_bot/outlook-calendar/#get_events_by_days","title":"get_events_by_days","text":"<pre><code>@staticmethod\ndef get_events_by_days(events: list, days: int) -&gt; list\n</code></pre> <p>The method includes a functionality to get the weekly events</p> <p>Arguments:</p> <ul> <li><code>events</code> list - Specify the calendar events</li> <li><code>days</code> - (int): Specify the control days</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>BaseException</code> - Unspecified error by extracting the datetime information</li> </ul> <p>Returns:</p> <ul> <li><code>events_cw</code> list - Returns the corresponding weekly calendar events</li> </ul> <p></p>"},{"location":"outlook_calendar_slack_notification_bot/outlook-calendar/#get_weekly_events","title":"get_weekly_events","text":"<pre><code>def get_weekly_events(events: list) -&gt; list\n</code></pre> <p>The method includes a functionality to get the weekly events</p> <p>Arguments:</p> <ul> <li><code>events</code> list - Specify the calendar events</li> </ul> <p>Raises:</p> <ul> <li><code>ValueError</code> - Missed specifying a necessary value</li> <li><code>BaseException</code> - Unspecified error by extracting the datetime information</li> </ul> <p>Returns:</p> <ul> <li><code>events_cw</code> list - Returns the corresponding weekly calendar events</li> </ul>"},{"location":"outlook_calendar_slack_notification_bot/slack/","title":"Table of Contents","text":"<ul> <li>slack</li> <li>Slack<ul> <li>send_slack_message</li> </ul> </li> </ul>"},{"location":"outlook_calendar_slack_notification_bot/slack/#slack","title":"slack","text":""},{"location":"outlook_calendar_slack_notification_bot/slack/#slack-objects","title":"Slack Objects","text":"<pre><code>class Slack()\n</code></pre> <p>The class includes all necessary methods to access the Slack endpoints</p> <p>Arguments:</p> <ul> <li><code>slack_api</code> SlackAPI - Inject a Slack API model object that includes all necessary values and information</li> <li><code>custom_notification</code> bool - Specify if the custom notification should be enabled or not (default False)</li> </ul> <p>Attributes:</p> <ul> <li><code>slack_api</code> SlackAPI - This is where we store the slack_api</li> <li><code>custom_notification</code> bool - This is where we store the custom_notification</li> <li><code>slack_client</code> httpx.Client - This is where we store the slack_client</li> </ul> <p></p>"},{"location":"outlook_calendar_slack_notification_bot/slack/#send_slack_message","title":"send_slack_message","text":"<pre><code>def send_slack_message(events_cw: list,\n                       custom_successful_message: str = None,\n                       custom_error_message: str = None)\n</code></pre> <p>The method includes a functionality to send the Slack messages</p> <p>Arguments:</p> <ul> <li><code>events_cw</code> list - Specify the calendar events</li> <li><code>custom_successful_message</code> str - Specify the optional custom successful message (default None)</li> <li><code>custom_error_message</code> str - Specify the optional custom error message (default None)</li> </ul> <p>Raises:</p> <ul> <li><code>ConnectionError</code> - It is not possible to establish a connection to the endpoint</li> <li><code>ValueError</code> - The return value of the Slack API call is not valid</li> </ul> <p>Returns:</p> <p>None</p>"}]}